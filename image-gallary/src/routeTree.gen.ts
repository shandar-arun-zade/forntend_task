/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ImageGallaryImport } from './routes/image-gallary'
import { Route as HomeImport } from './routes/home'
import { Route as IndexImport } from './routes/index'
import { Route as UserUserImport } from './routes/user/user'
import { Route as UserProfileImport } from './routes/user/profile'
import { Route as ImageGallaryaImgIdImport } from './routes/image-gallarya.$imgId'

// Create/Update Routes

const ImageGallaryRoute = ImageGallaryImport.update({
  id: '/image-gallary',
  path: '/image-gallary',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserRoute = UserUserImport.update({
  id: '/user/user',
  path: '/user/user',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileRoute = UserProfileImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => rootRoute,
} as any)

const ImageGallaryaImgIdRoute = ImageGallaryaImgIdImport.update({
  id: '/image-gallarya/$imgId',
  path: '/image-gallarya/$imgId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/image-gallary': {
      id: '/image-gallary'
      path: '/image-gallary'
      fullPath: '/image-gallary'
      preLoaderRoute: typeof ImageGallaryImport
      parentRoute: typeof rootRoute
    }
    '/image-gallarya/$imgId': {
      id: '/image-gallarya/$imgId'
      path: '/image-gallarya/$imgId'
      fullPath: '/image-gallarya/$imgId'
      preLoaderRoute: typeof ImageGallaryaImgIdImport
      parentRoute: typeof rootRoute
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileImport
      parentRoute: typeof rootRoute
    }
    '/user/user': {
      id: '/user/user'
      path: '/user/user'
      fullPath: '/user/user'
      preLoaderRoute: typeof UserUserImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/image-gallary': typeof ImageGallaryRoute
  '/image-gallarya/$imgId': typeof ImageGallaryaImgIdRoute
  '/user/profile': typeof UserProfileRoute
  '/user/user': typeof UserUserRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/image-gallary': typeof ImageGallaryRoute
  '/image-gallarya/$imgId': typeof ImageGallaryaImgIdRoute
  '/user/profile': typeof UserProfileRoute
  '/user/user': typeof UserUserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/image-gallary': typeof ImageGallaryRoute
  '/image-gallarya/$imgId': typeof ImageGallaryaImgIdRoute
  '/user/profile': typeof UserProfileRoute
  '/user/user': typeof UserUserRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/image-gallary'
    | '/image-gallarya/$imgId'
    | '/user/profile'
    | '/user/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/image-gallary'
    | '/image-gallarya/$imgId'
    | '/user/profile'
    | '/user/user'
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/image-gallary'
    | '/image-gallarya/$imgId'
    | '/user/profile'
    | '/user/user'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRoute
  ImageGallaryRoute: typeof ImageGallaryRoute
  ImageGallaryaImgIdRoute: typeof ImageGallaryaImgIdRoute
  UserProfileRoute: typeof UserProfileRoute
  UserUserRoute: typeof UserUserRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRoute,
  ImageGallaryRoute: ImageGallaryRoute,
  ImageGallaryaImgIdRoute: ImageGallaryaImgIdRoute,
  UserProfileRoute: UserProfileRoute,
  UserUserRoute: UserUserRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/home",
        "/image-gallary",
        "/image-gallarya/$imgId",
        "/user/profile",
        "/user/user"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/home": {
      "filePath": "home.jsx"
    },
    "/image-gallary": {
      "filePath": "image-gallary.jsx"
    },
    "/image-gallarya/$imgId": {
      "filePath": "image-gallarya.$imgId.jsx"
    },
    "/user/profile": {
      "filePath": "user/profile.jsx"
    },
    "/user/user": {
      "filePath": "user/user.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
